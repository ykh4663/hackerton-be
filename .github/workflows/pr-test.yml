# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  checks: write
  pull-requests: write

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: JDK 17 setting
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-



      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew



      - name: Test with Gradle
        run: ./gradlew --info test

      - name: 테스트 결과 Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: 'build/test-results/**/*.xml'

      - name: 테스트 실패 Comment (JUnit Report)
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: 'build/test-results/test/TEST-*.xml'

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties